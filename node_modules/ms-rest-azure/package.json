{
  "_from": "ms-rest-azure",
  "_id": "ms-rest-azure@2.5.4",
  "_inBundle": false,
  "_integrity": "sha512-SwycoZsBWpqxk9TvvzsoZ0/RQyT3c8lxBJmP7eXSBaG+pm9AmlRrkJwqCqNmAU1H/zcRMqhLFci276Sh4bmdCA==",
  "_location": "/ms-rest-azure",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "ms-rest-azure",
    "fetchSpec": "latest",
    "name": "ms-rest-azure",
    "raw": "ms-rest-azure",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/",
    "/azure-arm-monitor",
    "/azure-arm-resource"
  ],
  "_resolved": "https://registry.npmjs.org/ms-rest-azure/-/ms-rest-azure-2.5.4.tgz",
  "_shasum": "42796e2d4aad742a36f0f31e9decc4f33041d67c",
  "_shrinkwrap": null,
  "_spec": "ms-rest-azure",
  "_where": "C:\\Users\\gsc-30198.GSLAB\\Desktop\\nodeactivitylog",
  "author": {
    "email": "azsdkteam@microsoft.com",
    "name": "Microsoft Corporation",
    "url": "https://github.com/Azure/azure-sdk-for-node"
  },
  "bugs": {
    "url": "http://github.com/Azure/azure-sdk-for-node/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "@types/node": "^9.4.6",
    "@types/uuid": "^3.4.3",
    "adal-node": "^0.1.27",
    "async": "2.6.0",
    "moment": "^2.20.1",
    "ms-rest": "^2.3.1",
    "uuid": "^3.2.1"
  },
  "deprecated": false,
  "description": "Client Runtime for Node.js Azure client libraries generated using AutoRest",
  "devDependencies": {
    "@types/mocha": "^2.2.40",
    "@types/should": "^8.1.30",
    "jshint": "2.9.4",
    "mocha": "^3.2.0",
    "nock": "^9.0.14",
    "should": "5.2.0",
    "sinon": "^2.3.8",
    "typescript": "^2.7.2"
  },
  "homepage": "https://github.com/Azure/azure-sdk-for-node/runtime/ms-rest-azure",
  "keywords": [
    "autorest",
    "azure",
    "clientruntime",
    "microsoft",
    "node"
  ],
  "license": "MIT",
  "main": "./lib/msRestAzure.js",
  "name": "ms-rest-azure",
  "optionalDependencies": {},
  "readme": "ï»¿# MS-Rest-Azure\n\nInfrastructure for error handling, tracing, and http client pipeline configuration. Required by nodeJS Azure client libraries, generated using AutoRest.\n\n- **Node.js version: 4.x.x or higher**\n\n\n## How to Install\n\n```bash\nnpm install ms-rest-azure\n```\n\n## Usage\n```javascript\nvar msrestAzure = require('ms-rest-azure');\n```\n## Authentication\n\n#### Interactive Login is the simplest and the best way to authenticate.\nIt provides a url and code that needs to be copied and pasted in a browser and authenticated over there. If successful, \nthe user will get a DeviceTokenCredentials object.\n```javascript\n var someAzureServiceClient = require('azure-arm-someService');\n msRestAzure.interactiveLogin(function(err, credentials) {\n   if (err) return console.log(err);\n   var client = new someAzureServiceClient(credentials, 'your-subscriptionId');\n   client.someOperationGroup.method(param1, param2, function(err, result) {\n     if (err) return console.log(err);\n     return console.log(result);\n   });\n });\n```\n\n#### Login with username and password\nThis mechanism will only work for organizational ids and ids that are not 2FA enabled.\nOtherwise it is better to use the above mechanism (interactive login).\n```javascript\n var someAzureServiceClient = require('azure-arm-someService');\n msRestAzure.loginWithUsernamePassword(username, password, function(err, credentials) {\n   if (err) return console.log(err);\n   var client = new someAzureServiceClient(credentials, 'your-subscriptionId');\n   client.someOperationGroup.method(param1, param2, function(err, result) {\n     if (err) return console.log(err);\n     return console.log(result);\n   });\n });\n```\n\n### Non-Interactive Authentication\nIf you need to create an automation account for non interactive or scripting scenarios then please take a look at the documentation over [here](https://github.com/Azure/azure-sdk-for-node/blob/master/Documentation/Authentication.md). Once you have created a service principal you can authenticate using the following code snippet.\n\n#### Login with service principal name and secret\n```javascript\n var someAzureServiceClient = require('azure-arm-someService');\n msRestAzure.loginWithServicePrincipalSecret(clientId, secret, domain, function(err, credentials) {\n   if (err) return console.log(err);\n   var client = new someAzureServiceClient(credentials, 'your-subscriptionId');\n   client.someOperationGroup.method(param1, param2, function(err, result) {\n     if (err) retutrn console.log(err);\n     return console.log(result);\n   });\n });\n```\n## Using the generic (authenticated) AzureServiceClient to make custom requests to Azure.\nThis can be very useful in doing something custom or while debugging.\n\n### A simple client to make a request using the sendRequest() method.\nTo find out the power of sendRequest(), please visit [this link](http://azure.github.io/azure-sdk-for-node/ms-rest/latest/ServiceClient.html#sendRequest) for detailed documentation of supported options while sending a request.\n```javascript\nconst msrest = require('ms-rest');\nconst msRestAzure = require('ms-rest-azure');\nconst AzureServiceClient = msRestAzure.AzureServiceClient;\n\nconst clientId = process.env['CLIENT_ID'];\nconst secret = process.env['APPLICATION_SECRET'];\nconst domain = process.env['DOMAIN']; //also known as tenantId\nconst subscriptionId = process.env['AZURE_SUBSCRIPTION_ID'];\nvar client;\n\n//an example to list resource groups in a subscription\nmsRestAzure.loginWithServicePrincipalSecret(clientId, secret, domain).then((creds) => {\n  client = new AzureServiceClient(creds);\n  let options = {\n    method: 'GET',\n    url: `https://management.azure.com/subscriptions/${subscriptionId}/resourcegroups?api-version=2016-09-01`,\n    headers: {\n      'user-agent': 'MyTestApp/1.0'\n    }\n  }\n  return client.sendRequest(options);\n}).then((result) => {\n  console.dir(result, {depth: null, colors: true});\n}).catch((err) => {\n  console.dir(err, {depth: null, colors: true});\n});\n```\n\n## Related Projects\n\n- [AutoRest](https://github.com/Azure/AutoRest)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/Azure/azure-sdk-for-node.git"
  },
  "scripts": {
    "jshint": "jshint lib --reporter=jslint",
    "test": "npm install && npm -s run-script tsc && npm -s run-script jshint && npm -s run-script unit",
    "tsc": "tsc index.d.ts",
    "unit": "node test/unit.js testlist.txt"
  },
  "tags": [
    "autorest",
    "azure",
    "clientruntime",
    "microsoft",
    "node"
  ],
  "types": "./index.d.ts",
  "version": "2.5.4"
}
